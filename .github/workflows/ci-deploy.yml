
name: CI/CD - Strapi ECS

on:
  push:
    branches:
      - main   # deploy when pushing to main

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: zayn-strapi
  ECS_CLUSTER: z-strapi-cluster
  ECS_SERVICE: z-strapi-service
  TASK_DEFINITION_FAMILY: z-strapi-taskdef

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Render new ECS task definition
        id: task-def
        run: |
          cat <<EOF > taskdef.json
          {
            "family": "${TASK_DEFINITION_FAMILY}",
            "executionRoleArn": "arn:aws:iam::145065858967:role/zayn-ecs-task-exec-role",
            "networkMode": "awsvpc",
            "requiresCompatibilities": ["FARGATE"],
            "cpu": "512",
            "memory": "1024",
            "containerDefinitions": [
              {
                "name": "strapi",
                "image": "${IMAGE_URI}",
                "portMappings": [
                  {
                    "containerPort": 1337,
                    "protocol": "tcp"
                  }
                ],
                "essential": true,
                "logConfiguration": {
                  "logDriver": "awslogs",
                  "options": {
                    "awslogs-group": "/ecs/z-strapi",
                    "awslogs-region": "${AWS_REGION}",
                    "awslogs-stream-prefix": "ecs"
                  }
                }
              }
            ]
          }
          EOF

      - name: Register new task definition
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://taskdef.json

      - name: Update ECS service to use new task definition
        run: |
          LATEST_REVISION=$(aws ecs describe-task-definition \
            --task-definition ${TASK_DEFINITION_FAMILY} \
            --query 'taskDefinition.revision' --output text)

          aws ecs update-service \
            --cluster ${ECS_CLUSTER} \
            --service ${ECS_SERVICE} \
            --task-definition ${TASK_DEFINITION_FAMILY}:$LATEST_REVISION
